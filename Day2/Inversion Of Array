#include <bits/stdc++.h> 
long long ans=0;

void merge(long long *arr,long long l,long long mid,long long h)
{
    long long i=l;
    long long j=mid+1;
    long long k=0;
    vector<long long>temp(h-l+1);
    while(i<=mid && j<=h)
    {
        if(arr[i]<=arr[j])
        {
            temp[k++]=arr[i++];
        }
        else 
        {
            temp[k++]=arr[j++];
            ans+=(mid-i+1);
        }
    }

    while(i<=mid) temp[k++]=arr[i++];
    while(j<=h) temp[k++]=arr[j++];

    for(int i=l;i<=h;++i)
    {
        arr[i]=temp[i-l];
    }
}
void mergesort(long long *arr,long long l,long long h)
{
    if(l>=h) return;
    long long mid=(l+h)/2;
    mergesort(arr,l,mid);
    mergesort(arr,mid+1,h);
    merge(arr,l,mid,h);
}
long long getInversions(long long *arr, int n){
    // Write your code here.
    ans=0;
    mergesort(arr,0,n-1);
    return ans;
}
