#include <bits/stdc++.h> 
/************************************************************

    Following is the Binary Tree node structure:

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };


************************************************************/

vector<vector<int>> getTreeTraversal(BinaryTreeNode<int> *root){
    // Write your code here.
    vector<vector<int>>ans;
    vector<int>pre,in,post;
    if(root==NULL) return ans;
    stack<pair<BinaryTreeNode<int>*,int>>st;
    st.push({root,1});
    while(!st.empty())
    {
        auto temp=st.top();
        st.pop();
        if(temp.second==1)
        {
            pre.push_back(temp.first->data);
            temp.second++;
            st.push(temp);
            if(temp.first->left!=NULL) st.push({temp.first->left,1});
        }
        else if(temp.second==2)
        {
            in.push_back(temp.first->data);
            temp.second++;
            st.push(temp);
            if(temp.first->right!=NULL) st.push({temp.first->right,1});
        }
        else post.push_back(temp.first->data);
    }
    ans.push_back(in);
    ans.push_back(pre);
    ans.push_back(post);
    return ans;
}
