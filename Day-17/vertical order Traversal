/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */

class Solution {
public:
    
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        vector<vector<int>>ans;
        map<int,map<int,multiset<int>>>rk;
        queue<pair<TreeNode*,pair<int,int>>>q;
        q.push({root,{0,0}});
        while(!q.empty())
        {
            auto l=q.front();
            q.pop();
            TreeNode* temp=l.first;
            int row=l.second.first;
            int col=l.second.second;
            rk[col][row].insert(temp->val);
            if(temp->left)
            {
                q.push({temp->left,{row+1,col-1}});
            }
            if(temp->right)
            {
                q.push({temp->right,{row+1,col+1}});
            }
        }
        for(auto &x:rk)
        {
            vector<int>temp;
            for(auto &p:x.second)
            {
                temp.insert(temp.end(),p.second.begin(),p.second.end());
            }
            ans.push_back(temp);
        }
        return ans;
    }
};
